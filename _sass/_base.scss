/**** t3hmun's educational base scss file.
 * 
 * The job of this file is to define the appearance and feel of basic HTML elements using CSS.
 * The comments are extra verbose for educational purposes.
 * One may notice that most sizes and colours are set using variables.
 * These variables are a feature of SASS.
 * The values for these variables are all defined in the `main.scss` file.
 * SASS is an extension of CSS that outputs into CSS.
 * CSS tends to get ridiculously oversised and complicated these days.
 * SASS lets us abstract away a lot of this with variables and a bunch of other features i'm yet to learn.

__educational interlude__

## Margin VS Padding

Margins can overlap (only vertically in block elements) and are external to the element. 
Paddings do not overlap and are internal to the element. 
As a result margins only ensure a minimum distance between two elements. 
So if 2 elements have a 10px and 15px margin respectively, the gap between them would be 15px. 
If padding was used instead the gap would be 25 px.

****/

/* Everything visible is a child of body. This forms the basic default for everything. 
 * The header and footer are located inside the body (Header and footer are new HTML5 tags). 
 * The HTML head (not header) is mainly just meta tags and configuration. */
body {
    font-family: $base-font-family;
    font-size: $base-font-size;
    line-height: $base-line-height;
    font-weight: $body-font-weight;
    color: $text-colour;
    background-color: $background-colour;

    /* Everythgin lacking its own alignment will be centered (primarily header and footer). */
    text-align: center;
}

/* This is a new HTML 5 tag. Refers to a block of content that can be understood independantly.
 * For our purposes it is the main content body of a page; the bit between the header and footer. */
article {
    /* Block elements are centered by setting thier margins to auto. 
     * Only inline elements respond to text-alignment.*/
    margin-left: auto;
    margin-right: auto;

    text-align: left;

    /* Here we configure the maximum width we want to allow content to consume. */
    max-width: $article-width;
}

/* P for Paragraph. This should only be used for serious blocks of reading text.
 * Other quantities of text should use other tags. */
p, blockquote {
    /* Justift for glorious newspaper quality reading. */
    text-align: justify;
    /* Reading with is meant to be the maximum comfortable text block width. */
    max-width: $reading-width;
    margin: $standard-margin $standard-side-margin $endpara-margin;
    margin-left: auto;
    margin-right: auto;
    /* This stops the paragraph appearing next to floating text.
     * This will avoid awkward wrapping. */
    clear: both;
}

blockquote {
    border-left: $thick-line solid $subtle-colour;
    padding-left: $standard-side-margin;
}

ul {
    list-style: none;
    padding:0;    
    margin-left: auto;
    margin-right: auto;
    margin-bottom: $endpara-margin;
    max-width: $bullet-width;
    background: $bullet-background;
}

li { 
    padding-left: $bullet-indent; 
    text-indent: -$bullet-indent;
}

li:before {
    padding-right:$bullet-text-gap;
    content: "*";
    color: $strong-colour;
    font-weight: $bullet-weight;
}

li li:before {
    padding-right:$bullet-text-gap;
    content: "-";
    color: $strong-colour;
}

/* Img
 * Stops images being wider than the window.
 * Without this an image could stretch the content area activate a scroll bar.
 * Accompanying text would flow out of the screen with the image forcing the
 * user to scroll sideways to read each line. */
img {
    max-width: 100%;
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
    font-weight: $header-weight;
    /* Three value shorthand, top, sides, bottom */
    margin: $standard-margin $standard-side-margin $standard-margin;

    border-bottom: $thin-line solid $subtle-colour;

    /* This `&` syntax a feature of SASS. 
     * This results in `.post-title` CSS for each of the above header tags. */
    &.post-title {
        color: $highlight-colour;
    }

    &.site-title {
        font-weight: $site-title-weight;
        color: $highlight-colour;
        border-bottom: none;
    }
}

/* Links. Colour them according to the theme. */
a {
    color: $link-colour;
    text-decoration: none;

    &:visited {
        color: $visited-colour;
    }

    &:hover {
        color: $text-colour;
        text-decoration: underline;
    }

    /* This is for site links in the page header. */
    &.top-nav {
        font-size: $big-font-size;
        font-weight: $header-weight;
        margin: $standard-margin;
    }
}

/* Code formatting
 * The `code` tag is for inline monospace blocks.
 * The `pre` is for large blocks which may be colourised. */
pre,
code {
    border: $thin-line solid $subtle-colour;
    border-radius: $standard-radius;
    background-color: $code-background;
    font-family: $syntax-font-family;
}

code {
    padding: 0 $standard-margin $standard-side-margin;
    text-align: left;
}

pre {
    /* Padding defined using 2 value shorthand.
     * First value is top and bottom.
     * Second value is right and left. */
    padding: $standard-margin $standard-side-margin;
    border-radius: 0;

    /* This gives the code block its own scroll bar.
     * We don't want the code to fall off or stretch the screen. */
    overflow-x: auto;

    /* The code in the pre elements should not have borders and whatnot.
     * The > makes it only apply to code elements that are direct children to
     * pre elements. */
    > code {
        border: 0;
        padding-right: 0;
        padding-left: 0;
    }
}


/* Style for index / recent posts. 
 */
.index {
    text-align: left;
    margin: $standard-margin $standard-side-margin;

    /* This is used to give the title and info a single underline. */
    .index-excerpt {
        border-top: $thin-line solid $very-subtle-colour;
        clear: both;
    }

    .index-title {
        font-size: $big-font-size;
        float: left;
    }

    .index-info {
        background-color: $code-background;
        padding: $thin-line $standard-side-margin;
        float: right;
        overflow: auto;
    }
}